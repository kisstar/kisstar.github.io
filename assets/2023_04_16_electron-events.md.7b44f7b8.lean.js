import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.0f749972.js";const l="/images/electron/electron-events.png",o="/images/electron/renderer2main.png",e="/images/electron/main2renderer.png",t="/images/electron/mr2rm.png",c="/images/electron/main-proxy.png",r="/images/common/uncomfortable.gif",E="/images/electron/event-bus.png",y="/images/electron/reponse.png",D=JSON.parse('{"title":"electron-events，为 Electron 而生的事件模块","description":"","frontmatter":{"thumbnail":"/images/electron/electron-events.png","title":"electron-events，为 Electron 而生的事件模块","summary":"在大型复杂应用中 Electron 内部提供的 IPC 通信方案存在一定的局限性，本文主要讨论通过事件通信机制结合 IPC 模块实现更灵活的通信机制。","author":"Kisstar","location":"北京","date":"2023-04-16T00:00:00.000Z","tags":["Electron"]},"headers":[],"relativePath":"2023/04/16/electron-events.md","filePath":"posts/electron/2023-04-16-electron-events.md","lastUpdated":1699069026000}'),i={name:"2023/04/16/electron-events.md"},F=p("",80),d=[F];function v(h,m,C,A,u,g){return n(),a("div",null,d)}const w=s(i,[["render",v]]);export{D as __pageData,w as default};
