import{_ as p,o as l,c as o,Q as n,k as s,a}from"./chunks/framework.eecc699f.js";const e="/images/math/matrix.png",t="/images/math/square-matrix.png",r="/images/math/matrix-rotation.png",i="/images/math/matrix-translation.png",c="/images/math/matrix-scaling.png",C=JSON.parse('{"title":"矩阵基础","description":"","frontmatter":{"thumbnail":"/images/math/matrix.png","title":"矩阵基础","summary":"矩阵（Matrix）是一个按照长方阵列排列的复数或实数集合，元素为实数的矩阵为实矩阵。","author":"Kisstar","location":"北京","date":"2021-08-03T00:00:00.000Z","categoryKeys":["other"],"tagKeys":["math","matrix"],"outline":"deep"},"headers":[],"relativePath":"posts/math/2021-08-03-matrix.md","filePath":"posts/math/2021-08-03-matrix.md"}'),E={name:"posts/math/2021-08-03-matrix.md"},y=n('<img style="width:100%;height:350px;" src="'+e+'" alt="matrix"><p>矩阵（Matrix）是一个按照长方阵列排列的复数或实数集合，元素为实数的矩阵为实矩阵。</p><h2 id="特殊矩阵" tabindex="-1">特殊矩阵 <a class="header-anchor" href="#特殊矩阵" aria-label="Permalink to &quot;特殊矩阵&quot;">​</a></h2><ul><li>方阵：行数及列数皆相同的矩阵，也称方阵、方矩阵或正方矩阵。</li></ul><p><img src="'+t+'" alt="square-matrix"></p><p>在一个 n 阶方阵(或是 n 阶行列式)中，从左上角到右下角这一斜线方向上的 n 个元素所在的对角线，叫做 n 阶方阵(或行列式)的主对角线。</p><p>相反，从左下角至右上角这一斜线方向上的 n 个元素所在的对角线归为副对角线。</p><p>主对角线上的元素的两个角标是相同的，其它关于主对角线对称的两个元素之间的角标行数和列数相等、列数和行数相等。</p><ul><li><p>零矩阵：所有元素皆为 0 的矩阵。一般用 $O_{mxn}$ 进行表示。</p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E5%B0%8D%E8%A7%92%E7%9F%A9%E9%99%A3" target="_blank" rel="noreferrer">对角矩阵</a>：主对角线之外的元素皆为 0 的矩阵。</p></li><li><p>单位举证：主对角线元素为 1，其余元素为 0 的矩阵。</p></li><li><p><a href="https://baike.baidu.com/item/%E6%95%B0%E9%87%8F%E7%9F%A9%E9%98%B5/11034374" target="_blank" rel="noreferrer">数量矩阵</a>：设 E 是单位矩阵，k 是任何实数，则 kE 称为数量矩阵。换句话说，数量矩阵就是对角线上元素都是同一个数值，其余元素都是零。</p></li></ul><p>可见，对角矩阵、单位矩阵和数量矩阵都是方阵，都有对角线。</p><ul><li><p>三角矩阵：作为方形矩阵的一种，因其非零系数的排列呈三角形状而得名。上三角矩阵的对角线左下方的系数全部为零，下三角矩阵的对角线右上方的系数全部为零。</p></li><li><p>梯形矩阵：设 A 为非零矩阵，若非零行（即至少有一个非零元素的行），全在零行的上面，A 中各非零行中第一个（最后一个）非零元素前（后）面零元素的个数随行数的增大而增多（减少）则成为上（下）梯形矩阵。简称上（下）梯形阵。</p></li></ul><h2 id="矩阵的运算" tabindex="-1">矩阵的运算 <a class="header-anchor" href="#矩阵的运算" aria-label="Permalink to &quot;矩阵的运算&quot;">​</a></h2><p>如果两个矩阵拥有相同的行数和列数，且对应位置的元素相等，那么这两个矩阵是相等的。</p><h3 id="矩阵的加减法" tabindex="-1">矩阵的加减法 <a class="header-anchor" href="#矩阵的加减法" aria-label="Permalink to &quot;矩阵的加减法&quot;">​</a></h3>',14),m=s("p",null,[a("将两个矩阵进行加减时就是两个矩阵对应位置的元素进行加减，设 $A=(a_{ij})"),s("em",{ij:""},"{m*n}$ 与 $B=(b"),a(")_{m*n}$ 定义：")],-1),h=n('<ul><li>$A+B==(a_{ij}+b_{ij})_{m*n}$</li><li>$A-B==(a_{ij}-b_{ij})_{m*n}$</li></ul><p>运算规律：</p><ul><li>$A+B=B+A$</li><li>$(A+B)+C=A+(B+C)$</li><li>$A+O=A$</li><li>$A-A=O$</li></ul><p>另外 $(-a_{ij})_{m*n}$ 为 A 的负矩阵，记作 -A。</p><h3 id="矩阵的乘法" tabindex="-1">矩阵的乘法 <a class="header-anchor" href="#矩阵的乘法" aria-label="Permalink to &quot;矩阵的乘法&quot;">​</a></h3><p>与数的乘法，简称为数乘，记作：kA（也就是 k 与 A 中的每一项相乘）。</p><p>运算规律：</p><ul><li>$kA+kB=k(A+B)$</li><li>$k(lA)=(kl)A$</li><li>$kA+lA=(k+l)A$</li></ul><p>矩阵相乘，必须保证前一矩阵的列数与后一矩阵的行数相同，否则不能相乘。</p><p>需要注意的是，矩阵的乘法和数的乘法相比有以下几点不同：</p><ul><li>矩阵乘法不满足交换律；</li><li>矩阵乘法不满足消去律；</li><li>有非零的零因子：两个非零矩阵相乘可以得到零矩阵。</li></ul><p>运算规律：</p><ul><li>$(AB)C=A(BC)$</li><li>$A(B+C)=AB+AC$</li><li>$k(AB)=(kA)B=A(kB)$</li><li>$E_mA_{m<em>n}=A=A_{m</em>n}E_n$</li></ul><h3 id="方阵的幂" tabindex="-1">方阵的幂 <a class="header-anchor" href="#方阵的幂" aria-label="Permalink to &quot;方阵的幂&quot;">​</a></h3><p>方阵的正整数幂: $A^k=AA...A$</p><p>运算规律：</p><ul><li>$A^{k+l}=A^kA^l$</li><li>$A^0=E$ (方阵的零幂为单位矩阵)</li></ul><p>需要注意的是: $(AB)^k\\not=A^kB^k$</p><h3 id="矩阵的转置" tabindex="-1">矩阵的转置 <a class="header-anchor" href="#矩阵的转置" aria-label="Permalink to &quot;矩阵的转置&quot;">​</a></h3><p>矩阵的转置，就是把矩阵 A 中，第 i 行元素转换成矩阵的第 i 列，得到的新矩阵即为矩阵 A 的转置矩阵，记作 $A^T$。</p><p>对角阵的转置就是它本身。</p><p>运算规律：</p><ul><li>$(A^T)^T=A$</li><li>$(A+B)^T=A^T+b^T$</li><li>(kA)^T=kA^T</li><li>$(AB)^T=B^TA^T$</li></ul><h3 id="对称阵与反对称阵" tabindex="-1">对称阵与反对称阵 <a class="header-anchor" href="#对称阵与反对称阵" aria-label="Permalink to &quot;对称阵与反对称阵&quot;">​</a></h3><p>如果一个矩阵，它的转置和它本身相等，我们就把这个矩阵叫做对称阵。</p><p>对称阵: $A^T=A$</p><p>以下都是对称阵：</p><ul><li>$AA^T$</li><li>$A^TA$</li><li>$A+A^T$</li></ul><p>反对称阵: $A^T=-A$</p><p>以下都是反对称阵：</p><ul><li>$A-A^T$</li></ul><p>对称阵和反对称阵都是方阵。任何一个方阵都可以分解成对称阵和反对称阵的和。</p><h2 id="变换矩阵" tabindex="-1">变换矩阵 <a class="header-anchor" href="#变换矩阵" aria-label="Permalink to &quot;变换矩阵&quot;">​</a></h2><p>变换矩阵是数学线性代数中的一个概念。线性变换采用矩阵表示时，如果 T 是一个把 $R^n$ 映射到 $R^m$ 的线性变换，且 x 是一个具有 n 个元素的列向量则：</p><p>$T({\\vec x})={\\mathbf {A}}{\\vec x}$</p><p>此时，我们把 m×n 的矩阵 A，称为 T 的变换矩阵。</p><p>最为常用的几何变换都是线性变换，这包括旋转、缩放等。在二维空间中，线性变换可以用 3×3 的变换矩阵表示。</p><h3 id="矩阵旋转" tabindex="-1">矩阵旋转 <a class="header-anchor" href="#矩阵旋转" aria-label="Permalink to &quot;矩阵旋转&quot;">​</a></h3><p>设点 p 与原点连线和 X 轴夹角为 α 度，以原点为圆心，逆时针转过 β 度 , 原点与该点连线长度为 r, <code>[x, y]</code> 为变换前坐标， <code>[x&#39;, y&#39;]</code> 为变换后坐标。</p><p><img src="'+r+'" alt="matrix-rotation"></p><p>通过角度和长度两个变量我们可以分别表示出变换前后坐标的值，然后将两个等式合并消除 r 和 α 之后可以得到变换公式：</p><ul><li>$x&#39;=x\\cos \\theta -y\\sin \\theta$</li><li>$y&#39;=x\\sin \\theta +y\\cos \\theta$</li></ul><p>在二维空间中，用矩阵表示为：</p><p>${\\displaystyle {\\begin{pmatrix}x&#39;\\y&#39;\\end{pmatrix}}={\\begin{pmatrix}\\cos \\theta &amp;-\\sin \\theta \\\\sin \\theta &amp;\\cos \\theta \\end{pmatrix}}{\\begin{pmatrix}x\\y\\end{pmatrix}}}$</p><p>同理，在三维维空间中，如果我们绕着 Z 轴逆时针旋转 β 角度的话，此时 Z 轴上的值不会有任何变化，用矩阵可表示为：</p><p>${\\displaystyle {\\begin{pmatrix}x&#39;\\y&#39;\\z&#39;\\end{pmatrix}}={\\begin{pmatrix}\\cos \\theta &amp;-\\sin \\theta &amp;0 \\\\sin \\theta &amp;\\cos \\theta &amp;0\\0 &amp;0 &amp;1\\end{pmatrix}}{\\begin{pmatrix}x\\y\\z\\end{pmatrix}}}$</p><h3 id="矩阵平移" tabindex="-1">矩阵平移 <a class="header-anchor" href="#矩阵平移" aria-label="Permalink to &quot;矩阵平移&quot;">​</a></h3><p>在空间中，如果想要把一个顶点进行平移，那么需要将顶点坐标的每个分量（x 和 y）加上其在对应轴上平移的距离。</p><p><img src="'+i+'" alt="matrix-translation"></p><p>比如，将点 p(x, y, z) 平移到 p&#39;(x&#39;, y&#39;, z&#39;)，在 X 轴、Y 轴和 Z 轴三个方向的平移距离分别为 $T_x$、$T_x$ 和 $T_x$，其中后者为零。</p><ul><li>$x&#39;=x+T_x$</li><li>$y&#39;=y+T_y$</li><li>$z&#39;=z+T_z$</li></ul><p>在三维空间中，用矩阵表示为：</p><p>${\\begin{pmatrix}x&#39;\\y&#39;\\z&#39;\\1\\end{pmatrix}}={\\begin{pmatrix}1&amp;0&amp;0&amp;T_x\\0&amp;1&amp;0&amp;T_y\\0&amp;0&amp;1&amp;T_z\\0&amp;0&amp;0&amp;1\\end{pmatrix}}{\\begin{pmatrix}x\\y\\z\\1\\end{pmatrix}}$</p><h3 id="矩阵缩放" tabindex="-1">矩阵缩放 <a class="header-anchor" href="#矩阵缩放" aria-label="Permalink to &quot;矩阵缩放&quot;">​</a></h3><p>同样假设点 p 经过缩放之后变成了点 p&#39;，在 X 轴、Y 轴和 Z 轴三个方向上的缩放因子 $S_x$、$S_y$ 和 $S_z$ 不相关。</p><p><img src="'+c+`" alt="matrix-scaling"></p><p>那么，根据缩放关系存在：</p><ul><li>$x&#39;=S_x * x$</li><li>$y&#39;=S_y * y$</li><li>$z&#39;=S_z * z$</li></ul><p>用矩阵表示为：</p><p>\${\\begin{pmatrix}x&#39;\\y&#39;\\z&#39;\\1\\end{pmatrix}}={\\begin{pmatrix}S_x&amp;0&amp;0&amp;0\\0&amp;S_y&amp;0&amp;0\\0&amp;0&amp;S_z&amp;0\\0&amp;0&amp;0&amp;1\\end{pmatrix}}{\\begin{pmatrix}x\\y\\z\\1\\end{pmatrix}}$</p><h2 id="矩阵的应用" tabindex="-1">矩阵的应用 <a class="header-anchor" href="#矩阵的应用" aria-label="Permalink to &quot;矩阵的应用&quot;">​</a></h2><p>除了完成单个几何变换之外，我们还可以将变换进行组合，比如先旋转再平移。</p><p>对比在三维空间中的旋转和平移操作的矩阵表示，它们的阶数并不相同，为了将它们进行组合，我们需要将它们的阶数变得一致。</p><p>对比它们的方程表达式，我们可以得到下面的矩阵：</p><p>\${\\begin{pmatrix}x&#39;\\y&#39;\\z&#39;\\1\\end{pmatrix}}={\\begin{pmatrix}cosβ&amp;-sinβ&amp;0&amp;0\\sinβ&amp;cosβ&amp;0&amp;0\\0&amp;0&amp;1&amp;0\\0&amp;0&amp;0&amp;1\\end{pmatrix}}{\\begin{pmatrix}x\\y\\z\\1\\end{pmatrix}}$</p><p>在 WebGL 中，着色器提供了常用的矢量和矩阵的运算功能，我们可以将组合后的矩阵直接传递给顶点着色器，这样我们就可以一次性对图像旋转和平移。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 部分示例代码</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ANGLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">90.0</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 旋转角度</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> radian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (Math.</span><span style="color:#79B8FF;">PI</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ANGLE</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">180.0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> cosB </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">cos</span><span style="color:#E1E4E8;">(radian);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> sinB </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">sin</span><span style="color:#E1E4E8;">(radian);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> xformMatrix </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Float32Array</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  cosB,</span></span>
<span class="line"><span style="color:#E1E4E8;">  sinB,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">sinB,</span></span>
<span class="line"><span style="color:#E1E4E8;">  cosB,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1.0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> u_xformMatrix </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> webGLContext.</span><span style="color:#B392F0;">getUniformLocation</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  webGLContext.program,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;u_xformMatrix&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 将旋转矩阵传递给顶点着色器</span></span>
<span class="line"><span style="color:#E1E4E8;">webGLContext.</span><span style="color:#B392F0;">uniformMatrix4fv</span><span style="color:#E1E4E8;">(u_xformMatrix, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, xformMatrix);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 部分示例代码</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ANGLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">90.0</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 旋转角度</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> radian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Math.</span><span style="color:#005CC5;">PI</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ANGLE</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">180.0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> cosB </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">cos</span><span style="color:#24292E;">(radian);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sinB </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">sin</span><span style="color:#24292E;">(radian);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> xformMatrix </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Float32Array</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  cosB,</span></span>
<span class="line"><span style="color:#24292E;">  sinB,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">sinB,</span></span>
<span class="line"><span style="color:#24292E;">  cosB,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> u_xformMatrix </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> webGLContext.</span><span style="color:#6F42C1;">getUniformLocation</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  webGLContext.program,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;u_xformMatrix&#39;</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 将旋转矩阵传递给顶点着色器</span></span>
<span class="line"><span style="color:#24292E;">webGLContext.</span><span style="color:#6F42C1;">uniformMatrix4fv</span><span style="color:#24292E;">(u_xformMatrix, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, xformMatrix);</span></span></code></pre></div><p>以上是一个简单的示意，在三维计算机图形学中还有许多类似的用例。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="http://www.go60.top/wenzhang/juzhen/13.html" target="_blank" rel="noreferrer">矩阵定义及其简单应用</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5" target="_blank" rel="noreferrer">变换矩阵 - 维基百科，自由的百科全书</a></li></ul>`,70),x=[y,m,h];function A($,d,_,u,F,b){return l(),o("div",null,x)}const g=p(E,[["render",A]]);export{C as __pageData,g as default};
